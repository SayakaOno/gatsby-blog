{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./src/components/Page/Page.module.scss","webpack:///./src/components/Page/Page.js"],"names":["PageTemplate","data","language","pageContext","slug","includes","siteTitle","useSiteMetadata","title","titleJa","siteSubtitle","subtitle","subtitleJa","pageBody","markdownRemark","html","frontmatter","pageTitle","pageDescription","description","metaDescription","dangerouslySetInnerHTML","__html","module","exports","Page","children","pageRef","useRef","useEffect","current","scrollIntoView","ref","className","styles"],"mappings":"8FACA,gFAsDeA,UAxCM,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAChBC,EAD+C,EAAzBC,YACCC,KAAKC,SAAS,QAAU,KAAO,KACtDC,EACS,OAAbJ,EAAoBK,cAAkBC,MAAQD,cAAkBE,QAC5DC,EACS,OAAbR,EACIK,cAAkBI,SAClBJ,cAAkBK,WACVC,EAAaZ,EAAKa,eAAxBC,KAR6C,EAYjDd,EAAKa,eAAeE,YAFfC,EAV4C,EAUnDT,MACaU,EAXsC,EAWnDC,YAEIC,EACgB,OAApBF,EAA2BA,EAAkBR,EAE/C,OACE,kBAAC,IAAD,CAAQF,MAAUS,EAAL,MAAoBX,EAAaa,YAAaC,GACzD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMZ,MAAOS,GACX,yBAAKI,wBAAyB,CAAEC,OAAQT,S,qBClChDU,EAAOC,QAAU,CAAC,KAAO,2BAA2B,YAAc,kCAAkC,YAAc,kCAAkC,WAAa,mC,kHCwBlJC,EAjBF,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,MAAOkB,EAAsB,EAAtBA,SACfC,EAAUC,mBAMhB,OAJAC,qBAAU,WACRF,EAAQG,QAAQC,oBAIhB,yBAAKC,IAAKL,EAASM,UAAWC,IAAM,MAClC,yBAAKD,UAAWC,IAAM,aACnB1B,GAAS,wBAAIyB,UAAWC,IAAM,aAAkB1B,GACjD,yBAAKyB,UAAWC,IAAM,YAAiBR","file":"component---src-templates-page-template-js-012944574960819edc6c.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Page from '../components/Page';\nimport { useSiteMetadata } from '../hooks';\nimport type { MarkdownRemark } from '../types';\n\ntype Props = {\n  data: {\n    markdownRemark: MarkdownRemark\n  }\n};\n\nconst PageTemplate = ({ data, pageContext }: Props) => {\n  const language = pageContext.slug.includes('/ja/') ? 'ja' : 'en';\n  const siteTitle =\n    language === 'en' ? useSiteMetadata().title : useSiteMetadata().titleJa;\n  const siteSubtitle =\n    language === 'en'\n      ? useSiteMetadata().subtitle\n      : useSiteMetadata().subtitleJa;\n  const { html: pageBody } = data.markdownRemark;\n  const {\n    title: pageTitle,\n    description: pageDescription\n  } = data.markdownRemark.frontmatter;\n  const metaDescription =\n    pageDescription !== null ? pageDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${pageTitle} - ${siteTitle}`} description={metaDescription}>\n      <Sidebar />\n      <Page title={pageTitle}>\n        <div dangerouslySetInnerHTML={{ __html: pageBody }} />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page-module--page--2nMky\",\"page__inner\":\"Page-module--page__inner--2M_vz\",\"page__title\":\"Page-module--page__title--GPD8L\",\"page__body\":\"Page-module--page__body--Ic6i6\"};","import React, { useRef, useEffect } from 'react';\nimport styles from './Page.module.scss';\n\ntype Props = {\n  title?: string,\n  children: React.Node\n};\n\nconst Page = ({ title, children }: Props) => {\n  const pageRef = useRef();\n\n  useEffect(() => {\n    pageRef.current.scrollIntoView();\n  });\n\n  return (\n    <div ref={pageRef} className={styles['page']}>\n      <div className={styles['page__inner']}>\n        {title && <h1 className={styles['page__title']}>{title}</h1>}\n        <div className={styles['page__body']}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n"],"sourceRoot":""}