{"version":3,"sources":["webpack:///./src/components/Search/BlogList/BlogList.js","webpack:///./src/components/Search/Search.js","webpack:///./src/templates/search-template.js","webpack:///./src/components/Page/Page.module.scss","webpack:///./src/components/Page/Page.js","webpack:///./src/components/Search/BlogList/BlogList.module.scss","webpack:///./src/components/Search/Search.module.scss"],"names":["BlogList","props","edges","filters","year","month","selectedCategory","selectedTags","location","className","styles","map","edge","key","node","fields","slug","to","state","from","pathname","dateTime","moment","frontmatter","date","format","getLanguage","title","tags","Icon","icon","getIcon","tag","Search","totalCount","language","savedFilter","categoriesList","useCategoriesListJa","useCategoriesList","useState","setSelectedCategory","setSelectedTags","setTags","blogs","setBlogs","blogsInSelectedCategory","setBlogsInSelectedCategory","number","setNumber","setYear","setMonth","useEffect","savedCategory","savedTags","blogsInCategory","filterBlogByCategory","filterBlogs","getTags","setBlogsAndNumber","length","forEach","blog","push","tagsSet","Set","Array","category","filter","includesAllTags","array","i","includes","clearYear","clearMonth","clearTagFilter","clearCategoryFilter","clearFilter","onClickClearCategory","onYearSelect","event","target","value","targetMonth","filteredBlogs","slice","substr","filterBlogByTags","onMonthSelect","renderClearButton","clearFunction","onClick","onChange","options","toString","option","renderMonthSelect","onClickCategory","fieldValue","clickedTag","onClickTag","SearchTemplate","data","pageContext","siteTitle","useSiteMetadata","titleJa","siteSubtitle","subtitle","subtitleJa","allMarkdownRemark","pageTitle","Layout","description","Sidebar","isIndex","Page","module","exports","children","pageRef","useRef","current","scrollIntoView","ref"],"mappings":"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","file":"component---src-templates-search-template-js-f53e250d632979ce8063.js","sourcesContent":["// @flow\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { Location } from '@reach/router';\nimport { getIcon } from '../../../utils';\nimport Icon from '../../Icon';\nimport type { Edges } from '../../../types';\nimport styles from './BlogList.module.scss';\nimport { getLanguage } from '../../../utils/languageContext';\n\ntype Props = {\n  edges: Edges\n};\n\nconst BlogList = (props: Props) => {\n  const { edges, filters } = props;\n  const year = filters ? filters.year : '';\n  const month = filters ? filters.month : '';\n  const selectedCategory = filters ? filters.selectedCategory : '';\n  const selectedTags = filters ? filters.selectedTags : [];\n\n  return (\n    <Location>\n      {({ location }) => {\n        return (\n          <div className={styles['blog-list']}>\n            {edges.map(edge => {\n              return (\n                <Link\n                  className={styles['blog-list__item-title-link']}\n                  key={edge.node.fields.slug}\n                  to={edge.node.fields.slug}\n                  state={{\n                    from: location.pathname,\n                    year,\n                    month,\n                    selectedCategory,\n                    selectedTags\n                  }}\n                >\n                  <div className={styles['blog-list__item']}>\n                    <div className={styles['blog-list__item-meta']}>\n                      <time\n                        className={styles['blog-list__item-meta-time']}\n                        dateTime={moment(edge.node.frontmatter.date).format(\n                          'MMMM D, YYYY'\n                        )}\n                      >\n                        {moment(edge.node.frontmatter.date).format(\n                          getLanguage(location.pathname) === 'en'\n                            ? 'MMMM D, YYYY'\n                            : 'YYYY/MM/DD'\n                        )}\n                      </time>\n                      <span\n                        className={styles['blog-list__item-meta-divider']}\n                      />\n                    </div>\n                    <h2 className={styles['blog-list__item-title']}>\n                      {edge.node.frontmatter.title}\n                    </h2>\n                    {edge.node.frontmatter.tags ? (\n                      <div className={styles['blog-list__tags']}>\n                        <Icon icon={getIcon('tag')} />\n                        {edge.node.frontmatter.tags.map(tag => {\n                          return <span key={tag}>{tag}</span>;\n                        })}\n                      </div>\n                    ) : null}\n                  </div>\n                </Link>\n              );\n            })}\n          </div>\n        );\n      }}\n    </Location>\n  );\n};\n\nexport default BlogList;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport type { Edges } from '../../types';\nimport BlogList from './BlogList';\nimport styles from './Search.module.scss';\nimport { useCategoriesList, useCategoriesListJa } from '../../hooks';\n\ntype Props = {\n  edges: Edges\n};\n\nconst Search = ({ edges, totalCount, language, savedFilter }: Props) => {\n  const categoriesList =\n    language === 'ja' ? useCategoriesListJa() : useCategoriesList();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedTags, setSelectedTags] = useState('');\n  const [tags, setTags] = useState([]);\n  const [blogs, setBlogs] = useState([]);\n  const [blogsInSelectedCategory, setBlogsInSelectedCategory] = useState([]);\n  const [number, setNumber] = useState([]);\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n\n  useEffect(() => {\n    if (savedFilter) {\n      let year = savedFilter.year;\n      let month = savedFilter.month;\n      let savedCategory = savedFilter.selectedCategory;\n      let savedTags = savedFilter.selectedTags;\n      let blogsInCategory = filterBlogByCategory(savedCategory);\n      filterBlogs(year, month, savedCategory, savedTags);\n      setYear(year);\n      setMonth(month);\n      setSelectedCategory(savedCategory);\n      setSelectedTags(savedTags ? savedTags : []);\n      setTags(getTags(blogsInCategory));\n      setBlogsInSelectedCategory(blogsInCategory);\n    } else {\n      setBlogsAndNumber(edges, totalCount);\n    }\n  }, []);\n\n  const setBlogsAndNumber = (blogs, number = blogs.length) => {\n    setBlogs(blogs);\n    setNumber(number);\n  };\n\n  const onClickCategory = category => {\n    if (category === selectedCategory) {\n      clearFilter();\n      filterBlogs(year, month, '', '');\n    } else {\n      setSelectedCategory(category);\n      let blogs = filterBlogByCategory(category);\n      setTags(getTags(blogs));\n      setBlogsInSelectedCategory(blogs);\n      setSelectedTags([]);\n      filterBlogs(year, month, category, null);\n    }\n  };\n\n  const getTags = blogs => {\n    let tags = [];\n    blogs.forEach(blog => {\n      if (blog.node.frontmatter.tags) {\n        tags.push(...blog.node.frontmatter.tags);\n      }\n    });\n    let tagsSet = new Set(tags);\n    tags = Array.from(tagsSet);\n    return tags;\n  };\n\n  const onClickTag = clickedTag => {\n    let tags = [];\n    if (!selectedTags.length) {\n      tags.push(clickedTag);\n    } else if (selectedTags.includes(clickedTag)) {\n      tags = selectedTags.filter(tag => tag !== clickedTag);\n    } else {\n      tags = [...selectedTags, clickedTag];\n    }\n    setSelectedTags(tags);\n    filterBlogs(year, month, selectedCategory, tags);\n  };\n\n  const filterBlogByCategory = (category, blogs = edges) => {\n    return blogs.filter(edge => edge.node.frontmatter.category === category);\n  };\n\n  const filterBlogByTags = (tags, blogs = blogsInSelectedCategory) => {\n    return blogs.filter(blog =>\n      includesAllTags(tags, blog.node.frontmatter.tags)\n    );\n  };\n\n  const includesAllTags = (tags, array) => {\n    for (let i = 0; i < tags.length; i++) {\n      if (!array.includes(tags[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const clearYear = () => {\n    setMonth('00');\n    setYear('00');\n    filterBlogs('', '', selectedCategory, selectedTags);\n  };\n\n  const clearMonth = () => {\n    setMonth('00');\n    filterBlogs(year, '', selectedCategory, selectedTags);\n  };\n\n  const clearTagFilter = () => {\n    setSelectedTags([]);\n    filterBlogs(year, month, selectedCategory, '');\n  };\n\n  const clearCategoryFilter = () => {\n    setSelectedCategory('');\n    setTags([]);\n    setSelectedTags([]);\n    setBlogsInSelectedCategory([]);\n  };\n\n  const clearFilter = () => {\n    setYear('');\n    setMonth('');\n    clearCategoryFilter();\n    setBlogsAndNumber(edges, totalCount);\n  };\n\n  const getBlogYears = () => {\n    return Array.from(\n      new Set(edges.map(edge => edge.node.frontmatter.date.substr(0, 4)))\n    );\n  };\n\n  const onClickClearCategory = () => {\n    clearCategoryFilter();\n    setBlogsAndNumber(edges, totalCount);\n    filterBlogs(year, month, '', '');\n  };\n\n  const onYearSelect = event => {\n    let year = event.target.value;\n    let targetMonth = month;\n    if (year === '00') {\n      setMonth('00');\n      targetMonth = '';\n    }\n    setYear(year);\n    filterBlogs(\n      event.target.value,\n      targetMonth,\n      selectedCategory,\n      selectedTags\n    );\n  };\n\n  const filterBlogs = (year, month, category, tags) => {\n    let filteredBlogs = edges.slice();\n    // year & month\n    if (month && month !== '00') {\n      filteredBlogs = filteredBlogs.filter(blog => {\n        return blog.node.frontmatter.date.substr(0, 7) === `${year}-${month}`;\n      });\n      // year\n    } else if (year && year !== '00') {\n      filteredBlogs = filteredBlogs.filter(blog => {\n        return blog.node.frontmatter.date.substr(0, 4) === year;\n      });\n    }\n    // category & tags\n    if (tags && tags.length) {\n      filteredBlogs = filterBlogByCategory(category, filteredBlogs);\n      filteredBlogs = filterBlogByTags(tags, filteredBlogs);\n      // category\n    } else if (category) {\n      filteredBlogs = filterBlogByCategory(category, filteredBlogs);\n    }\n    setBlogsAndNumber(filteredBlogs);\n  };\n\n  const renderYearSelect = () => {\n    return (\n      <div className={styles['search__filter__date-year']}>\n        <select value={year} onChange={onYearSelect}>\n          <option key=\"00\" value=\"00\">\n            {language === 'en' ? 'Year' : '年'}\n          </option>\n          {getBlogYears().map(year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n        {year && year !== '00' ? renderClearButton(clearYear) : null}\n      </div>\n    );\n  };\n\n  const onMonthSelect = event => {\n    setMonth(event.target.value);\n    filterBlogs(year, event.target.value, selectedCategory, selectedTags);\n  };\n\n  const renderMonthSelect = () => {\n    if (language === 'en') {\n      return (\n        <div className={styles['search__filter__date-month']}>\n          <select value={month} onChange={onMonthSelect}>\n            <option key=\"00\" value=\"00\">\n              Month\n            </option>\n            <option key=\"01\" value=\"01\">\n              January\n            </option>\n            <option key=\"02\" value=\"02\">\n              February\n            </option>\n            <option key=\"03\" value=\"03\">\n              March\n            </option>\n            <option key=\"04\" value=\"04\">\n              April\n            </option>\n            <option key=\"05\" value=\"05\">\n              May\n            </option>\n            <option key=\"06\" value=\"06\">\n              June\n            </option>\n            <option key=\"07\" value=\"07\">\n              July\n            </option>\n            <option key=\"08\" value=\"08\">\n              August\n            </option>\n            <option key=\"09\" value=\"09\">\n              September\n            </option>\n            <option key=\"10\" value=\"10\">\n              October\n            </option>\n            <option key=\"11\" value=\"11\">\n              November\n            </option>\n            <option key=\"12\" value=\"12\">\n              December\n            </option>\n          </select>\n          {month && month !== '00' ? renderClearButton(clearMonth) : null}\n        </div>\n      );\n    }\n\n    let options = [];\n    for (let i = 1; i <= 12; i++) {\n      let value = i < 10 ? '0' + i.toString() : i.toString();\n      options.push(\n        <option key={value} value={value}>\n          {i + '月'}\n        </option>\n      );\n    }\n    return (\n      <select value={month} onChange={onMonthSelect}>\n        <option key=\"00\" value=\"00\">\n          月\n        </option>\n        {options.map(option => option)}\n      </select>\n    );\n  };\n\n  const renderCategories = () => {\n    return (\n      <div className={styles['search__filter__categories']}>\n        <div className={styles['search__filter__categories-title']}>\n          <span>{language === 'en' ? 'Category' : 'カテゴリー'}</span>{' '}\n          {selectedCategory ? renderClearButton(onClickClearCategory) : null}\n        </div>\n        <ul className={styles['search__filter__categories-list']}>\n          {categoriesList.map(category => {\n            return (\n              <li\n                onClick={() => onClickCategory(category.fieldValue)}\n                key={category.fieldValue}\n                className={\n                  selectedCategory\n                    ? selectedCategory.includes(category.fieldValue)\n                      ? styles['search__filter__categories-list-item-selected']\n                      : ''\n                    : ''\n                }\n              >\n                {category.fieldValue}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  const renderTags = () => {\n    return (\n      <div className={styles['search__filter__tags']}>\n        <div className={styles['search__filter__tags-title']}>\n          <span>{language === 'en' ? 'Tags' : 'タグ'}</span>{' '}\n          {selectedTags.length ? renderClearButton(clearTagFilter) : null}\n        </div>\n        <ul className={styles['search__filter__tags-list']}>\n          {tags.map(tag => {\n            return (\n              <li\n                onClick={() => onClickTag(tag)}\n                key={tag}\n                className={\n                  selectedTags.includes(tag)\n                    ? styles['search__filter__tags-list-item-selected']\n                    : ''\n                }\n              >\n                {tag}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  const renderClearButton = clearFunction => {\n    return (\n      <span\n        onClick={clearFunction}\n        className={styles['search__filter__clear-specific']}\n      >\n        ×\n      </span>\n    );\n  };\n\n  const renderClearFilterButton = () => {\n    return (\n      <div>\n        <span onClick={clearFilter} className={styles['search__filter__clear']}>\n          {language === 'en' ? '→ All posts' : '→ 全ブログ'}\n        </span>\n      </div>\n    );\n  };\n\n  const renderCount = () => {\n    return (\n      <div className={styles['search__count']}>\n        {selectedCategory || (year && year !== '00')\n          ? number === 0\n            ? language === 'en'\n              ? 'No posts found'\n              : '該当ブログがありません'\n            : language === 'en'\n            ? `${number} post${number > 1 ? 's' : ''} found`\n            : `該当ブログ: ${number}`\n          : language === 'en'\n          ? `${number} posts`\n          : `全${number}件`}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles['search']}>\n      <h1 className={styles['search__title']}>\n        {language === 'en' ? 'Search' : '検索'}\n      </h1>\n      <div className={styles['search__filter']}>\n        <div className={styles['search__filter__date']}>\n          {renderYearSelect()}\n          {year && year !== '00' ? renderMonthSelect() : null}\n        </div>\n        {renderCategories()}\n        {tags.length ? renderTags() : null}\n        {(year && year !== '00') || selectedCategory\n          ? renderClearFilterButton()\n          : null}\n      </div>\n\n      {renderCount()}\n      <BlogList\n        edges={blogs}\n        filters={\n          year || month || selectedCategory\n            ? {\n                year: year,\n                month: month,\n                selectedCategory: selectedCategory,\n                selectedTags: selectedTags\n              }\n            : null\n        }\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Page from '../components/Page';\nimport Search from '../components/Search';\nimport { useSiteMetadata } from '../hooks';\nimport type { PageContext, AllMarkdownRemark } from '../types';\n\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext\n};\n\nconst SearchTemplate = ({ data, pageContext, location }: Props) => {\n  const { language } = pageContext;\n  const siteTitle =\n    language === 'en' ? useSiteMetadata().title : useSiteMetadata().titleJa;\n  const siteSubtitle =\n    language === 'en'\n      ? useSiteMetadata().subtitle\n      : useSiteMetadata().subtitleJa;\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = `${language === 'en' ? 'Search' : '検索'} - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar isIndex />\n      <Page>\n        <Search\n          totalCount={data.allMarkdownRemark.totalCount}\n          edges={edges}\n          language={language}\n          savedFilter={location.state}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query SearchTemplate($language: String!) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          draft: { ne: true }\n          language: { eq: $language }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            tags\n            description\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nexport default SearchTemplate;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page-module--page--2nMky\",\"page__inner\":\"Page-module--page__inner--2M_vz\",\"page__title\":\"Page-module--page__title--GPD8L\",\"page__body\":\"Page-module--page__body--Ic6i6\"};","import React, { useRef, useEffect } from 'react';\nimport styles from './Page.module.scss';\n\ntype Props = {\n  title?: string,\n  children: React.Node\n};\n\nconst Page = ({ title, children }: Props) => {\n  const pageRef = useRef();\n\n  useEffect(() => {\n    pageRef.current.scrollIntoView();\n  });\n\n  return (\n    <div ref={pageRef} className={styles['page']}>\n      <div className={styles['page__inner']}>\n        {title && <h1 className={styles['page__title']}>{title}</h1>}\n        <div className={styles['page__body']}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blog-list__item\":\"BlogList-module--blog-list__item--2jj3R\",\"blog-list__item-title\":\"BlogList-module--blog-list__item-title--3bnsg\",\"blog-list__item-title-link\":\"BlogList-module--blog-list__item-title-link--2uVGx\",\"blog-list__item-description\":\"BlogList-module--blog-list__item-description--2ApD8\",\"blog-list__item-meta\":\"BlogList-module--blog-list__item-meta--3Of9p\",\"blog-list__item-meta-time\":\"BlogList-module--blog-list__item-meta-time--1ltas\",\"blog-list__item-meta-divider\":\"BlogList-module--blog-list__item-meta-divider--1njkK\",\"blog-list__item-meta-category-link\":\"BlogList-module--blog-list__item-meta-category-link--D0gX_\",\"blog-list__tags\":\"BlogList-module--blog-list__tags--2oYmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search-module--search--ovprU\",\"search__title\":\"Search-module--search__title--3KJIN\",\"search__count\":\"Search-module--search__count--1zzRX\",\"search__filter\":\"Search-module--search__filter--3UVDc\",\"search__filter__date\":\"Search-module--search__filter__date--2Vwc3\",\"search__filter__date-year\":\"Search-module--search__filter__date-year--1w7eO\",\"search__filter__date-month\":\"Search-module--search__filter__date-month--14gKk\",\"search__filter__categories-title\":\"Search-module--search__filter__categories-title--JDGX3\",\"search__filter__categories-list\":\"Search-module--search__filter__categories-list--3Rp9N\",\"search__filter__categories-list-item-selected\":\"Search-module--search__filter__categories-list-item-selected--3OJT3\",\"search__filter__tags\":\"Search-module--search__filter__tags--2hbMb\",\"search__filter__tags-title\":\"Search-module--search__filter__tags-title--1L-Hn\",\"search__filter__tags-list\":\"Search-module--search__filter__tags-list--1OBUE\",\"search__filter__tags-list-item-selected\":\"Search-module--search__filter__tags-list-item-selected--3qGpA\",\"search__filter__clear-specific\":\"Search-module--search__filter__clear-specific--2cUdx\",\"search__filter__clear\":\"Search-module--search__filter__clear--1MtlC\"};"],"sourceRoot":""}